// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                 Int      @id @default(autoincrement())
  title              String
  description        String
  price              Int 
  discountPercentage Float?
  rating             Float?
  stock              Int
  brand              String
  category           String
  thumbnail          String?
  createdAt          DateTime @default(now())

  orders             Order[]  // ✅ Reverse relation
  @@unique([title, category, brand], name: "title_category_brand_unique")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  mobile    String
  address   String
  landmark  String
  state     String
  pincode   String
  usertype  String   @default("user")

  addresses Address[]
  orders    Order[]  // ✅ Reverse relation
}

model Address {
  id        Int    @id @default(autoincrement())
  userId    Int
  address   String
  landmark  String
  state     String
  pincode   String

  user      User   @relation(fields: [userId], references: [id])
  orders    Order[] // ✅ Reverse relation
}

model OtpCode {
  id         Int      @id @default(autoincrement())
  email      String
  code       String
  expires_at DateTime
}

model Order {
  id          Int      @id @default(autoincrement())
  productId   Int
  userId      Int
  title       String
  description String
  price       Int
  thumbnail   String?

  user        User     @relation(fields: [userId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
  addressId   Int
  address     Address  @relation(fields: [addressId], references: [id])
  createdAt   DateTime @default(now())
}
